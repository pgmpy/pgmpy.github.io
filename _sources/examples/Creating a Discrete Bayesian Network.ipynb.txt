{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Creating Discrete Bayesian Networks"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Defining a Discrete Bayesian Network (BN) involves specifying the network structure and its parameterization in terms of Tabular Conditional Probability Distributions(CPDs), also known as Conditional Probability Tables (CPTs).\n",
    "\n",
    "There are few ways to define a BN in pgmpy:\n",
    "1. Load an example model from bnlearn repository (https://www.bnlearn.com/bnrepository/).\n",
    "2. Define the network manually.\n",
    "3. Generate a random network."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1. Load an Example Model\n",
    "\n",
    "pgmpy provides a method `pgmpy.utils.get_example_model` to quickly load any model from the bnlearn repository: https://www.bnlearn.com/bnrepository/"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Imports\n",
    "from IPython.display import Image\n",
    "from pgmpy.utils import get_example_model\n",
    "\n",
    "# Load the model\n",
    "asia_model = get_example_model('asia')\n",
    "\n",
    "# Visualize the network\n",
    "viz = asia_model.to_graphviz()\n",
    "viz.draw('asia.png', prog='neato')\n",
    "Image('asia.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Nodes in the model: ['asia', 'tub', 'smoke', 'lung', 'bronc', 'either', 'xray', 'dysp'] \n",
      "\n",
      "Edges in the model: [('asia', 'tub'), ('tub', 'either'), ('smoke', 'lung'), ('smoke', 'bronc'), ('lung', 'either'), ('bronc', 'dysp'), ('either', 'xray'), ('either', 'dysp')] \n",
      "\n",
      "CPDs in the model: \n",
      "[<TabularCPD representing P(asia:2) at 0x7e73d1244880>,\n",
      " <TabularCPD representing P(bronc:2 | smoke:2) at 0x7e73d12441c0>,\n",
      " <TabularCPD representing P(dysp:2 | bronc:2, either:2) at 0x7e73d12459f0>,\n",
      " <TabularCPD representing P(either:2 | lung:2, tub:2) at 0x7e73d12456c0>,\n",
      " <TabularCPD representing P(lung:2 | smoke:2) at 0x7e73d12458d0>,\n",
      " <TabularCPD representing P(smoke:2) at 0x7e73d1245660>,\n",
      " <TabularCPD representing P(tub:2 | asia:2) at 0x7e73d1245900>,\n",
      " <TabularCPD representing P(xray:2 | either:2) at 0x7e73d12457e0>]\n"
     ]
    }
   ],
   "source": [
    "import pprint\n",
    "\n",
    "# Access attributes of the model\n",
    "nodes = asia_model.nodes()\n",
    "edges = asia_model.edges()\n",
    "cpds = asia_model.get_cpds()\n",
    "\n",
    "print(f\"Nodes in the model: {nodes} \\n\")\n",
    "print(f\"Edges in the model: {edges} \\n\")\n",
    "print(f\"CPDs in the model: \")\n",
    "pprint.pp(cpds)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. Defining the Model Manually\n",
    "Defining a network in pgmpy involves two steps:\n",
    "1. Define the network structure\n",
    "2. Define the parameterization, i.e. CPDs\n",
    "\n",
    "And lastly, CPDs can be associated with the network. Taking an example of the Cancer network from the bnlearn repository as shown below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Image(\"images/cancer.png\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from pgmpy.models import BayesianNetwork\n",
    "from pgmpy.factors.discrete import TabularCPD\n",
    "\n",
    "# Step 1: Define the network structure.\n",
    "cancer_model = BayesianNetwork(\n",
    "    [\n",
    "        (\"Pollution\", \"Cancer\"),\n",
    "        (\"Smoker\", \"Cancer\"),\n",
    "        (\"Cancer\", \"Xray\"),\n",
    "        (\"Cancer\", \"Dyspnoea\"),\n",
    "    ]\n",
    ")\n",
    "\n",
    "# Step 2: Define the CPDs.\n",
    "cpd_poll = TabularCPD(variable=\"Pollution\", variable_card=2, values=[[0.9], [0.1]])\n",
    "cpd_smoke = TabularCPD(variable=\"Smoker\", variable_card=2, values=[[0.3], [0.7]])\n",
    "cpd_cancer = TabularCPD(\n",
    "    variable=\"Cancer\",\n",
    "    variable_card=2,\n",
    "    values=[[0.03, 0.05, 0.001, 0.02], [0.97, 0.95, 0.999, 0.98]],\n",
    "    evidence=[\"Smoker\", \"Pollution\"],\n",
    "    evidence_card=[2, 2],\n",
    ")\n",
    "cpd_xray = TabularCPD(\n",
    "    variable=\"Xray\",\n",
    "    variable_card=2,\n",
    "    values=[[0.9, 0.2], [0.1, 0.8]],\n",
    "    evidence=[\"Cancer\"],\n",
    "    evidence_card=[2],\n",
    ")\n",
    "cpd_dysp = TabularCPD(\n",
    "    variable=\"Dyspnoea\",\n",
    "    variable_card=2,\n",
    "    values=[[0.65, 0.3], [0.35, 0.7]],\n",
    "    evidence=[\"Cancer\"],\n",
    "    evidence_card=[2],\n",
    ")\n",
    "\n",
    "# Step 3: Add the CPDs to the model.\n",
    "cancer_model.add_cpds(cpd_poll, cpd_smoke, cpd_cancer, cpd_xray, cpd_dysp)\n",
    "\n",
    "# Step 4: Check if the model is correctly defined.\n",
    "cancer_model.check_model()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3. Generating a Random Model\n",
    "pgmpy offers methods to:\n",
    "1. Generate a completely random network\n",
    "2. Given a network structure, generate random CPDs.\n",
    "\n",
    "### Generate a completely random model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from pgmpy.models import BayesianNetwork\n",
    "\n",
    "random_model = BayesianNetwork.get_random(n_nodes=8, edge_prob=0.4, n_states=2, latents=True)\n",
    "\n",
    "# Visualize the network\n",
    "viz = random_model.to_graphviz()\n",
    "viz.draw('random.png', prog='neato')\n",
    "Image('random.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Nodes in the model: [0, 2, 3, 4, 5, 6, 7, 1] \n",
      "\n",
      "Edges in the model: [(0, 2), (0, 3), (0, 4), (0, 5), (2, 3), (2, 5), (2, 6), (3, 4), (4, 5), (5, 7), (1, 2), (1, 6)] \n",
      "\n",
      "CPDs in the model: \n",
      "[<TabularCPD representing P(0:2) at 0x7e73ca74ec50>,\n",
      " <TabularCPD representing P(2:2 | 0:2, 1:2) at 0x7e73ca74ddb0>,\n",
      " <TabularCPD representing P(3:2 | 0:2, 2:2) at 0x7e73ca74dd80>,\n",
      " <TabularCPD representing P(4:2 | 0:2, 3:2) at 0x7e73ca74e200>,\n",
      " <TabularCPD representing P(5:2 | 0:2, 2:2, 4:2) at 0x7e73ca74dbd0>,\n",
      " <TabularCPD representing P(6:2 | 2:2, 1:2) at 0x7e73ca74dab0>,\n",
      " <TabularCPD representing P(7:2 | 5:2) at 0x7e73ca74cf40>,\n",
      " <TabularCPD representing P(1:2) at 0x7e73ca74dd50>]\n"
     ]
    }
   ],
   "source": [
    "import pprint\n",
    "\n",
    "# Access attributes of the model\n",
    "nodes = random_model.nodes()\n",
    "edges = random_model.edges()\n",
    "cpds = random_model.get_cpds()\n",
    "\n",
    "print(f\"Nodes in the model: {nodes} \\n\")\n",
    "print(f\"Edges in the model: {edges} \\n\")\n",
    "print(f\"CPDs in the model: \")\n",
    "pprint.pp(cpds)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Generate random CPDs for a given network structure"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Nodes in the model: ['Pollution', 'Cancer', 'Smoker', 'Xray', 'Dyspnoea'] \n",
      "\n",
      "Edges in the model: [('Pollution', 'Cancer'), ('Cancer', 'Xray'), ('Cancer', 'Dyspnoea'), ('Smoker', 'Cancer')] \n",
      "\n",
      "CPDs in the model: \n",
      "[<TabularCPD representing P(Pollution:3) at 0x7e73ca74eb30>,\n",
      " <TabularCPD representing P(Cancer:3 | Pollution:3, Smoker:3) at 0x7e73ca74ff40>,\n",
      " <TabularCPD representing P(Smoker:3) at 0x7e73ca74e020>,\n",
      " <TabularCPD representing P(Xray:3 | Cancer:3) at 0x7e73ca74d9c0>,\n",
      " <TabularCPD representing P(Dyspnoea:3 | Cancer:3) at 0x7e73ca74ceb0>]\n"
     ]
    }
   ],
   "source": [
    "# Taking the example of the cancer model. \n",
    "\n",
    "cancer_random = BayesianNetwork(\n",
    "    [\n",
    "        (\"Pollution\", \"Cancer\"),\n",
    "        (\"Smoker\", \"Cancer\"),\n",
    "        (\"Cancer\", \"Xray\"),\n",
    "        (\"Cancer\", \"Dyspnoea\"),\n",
    "    ]\n",
    ")\n",
    "\n",
    "cancer_random.get_random_cpds(n_states=3, inplace=True)\n",
    "\n",
    "# Access attributes of the model\n",
    "nodes = cancer_random.nodes()\n",
    "edges = cancer_random.edges()\n",
    "cpds = cancer_random.get_cpds()\n",
    "\n",
    "print(f\"Nodes in the model: {nodes} \\n\")\n",
    "print(f\"Edges in the model: {edges} \\n\")\n",
    "print(f\"CPDs in the model: \")\n",
    "pprint.pp(cpds)"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
